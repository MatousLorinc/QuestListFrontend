[{"C:\\web\\quest_list\\quest_list\\src\\index.js":"1","C:\\web\\quest_list\\quest_list\\src\\reportWebVitals.js":"2","C:\\web\\quest_list\\quest_list\\src\\App.js":"3","C:\\web\\quest_list\\quest_list\\src\\Components\\QuestsAPI.js":"4","C:\\web\\quest_list\\quest_list\\src\\Components\\QuestForm.js":"5","C:\\web\\quest_list\\quest_list\\src\\Components\\QuestDataGrid.js":"6"},{"size":478,"mtime":1610760757346,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1610760711455,"results":"9","hashOfConfig":"8"},{"size":213,"mtime":1610965611278,"results":"10","hashOfConfig":"8"},{"size":1593,"mtime":1610970876222,"results":"11","hashOfConfig":"8"},{"size":3100,"mtime":1610971738990,"results":"12","hashOfConfig":"8"},{"size":2260,"mtime":1610970946292,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"ihid1z",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\web\\quest_list\\quest_list\\src\\index.js",[],["28","29"],"C:\\web\\quest_list\\quest_list\\src\\reportWebVitals.js",[],"C:\\web\\quest_list\\quest_list\\src\\App.js",[],"C:\\web\\quest_list\\quest_list\\src\\Components\\QuestsAPI.js",["30"],"import React, { Component } from 'react'\r\nimport QuestForm from './QuestForm.js';\r\nimport QuestDataGrid from './QuestDataGrid.js';\r\n\r\nexport class QuestsAPI extends Component  {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        // any error during downloading json?\r\n        error: null,\r\n        // is downloading json finished?\r\n        isLoaded: false,\r\n        // download json data\r\n        items: []\r\n      };\r\n    }\r\n  \r\n    componentDidMount() {\r\n      this.getQuests();\r\n    }\r\n    // fetch all quest in json format\r\n    getQuests(){\r\n      fetch(\"http://lorincsoft.com/api/quest_list/\")\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              items: result\r\n            });\r\n          },\r\n          // error handling\r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n          }\r\n        )\r\n    }\r\n  \r\n    render() {\r\n      const { error, isLoaded, items } = this.state;\r\n      if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n      } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n      } else {\r\n        return (\r\n            <React.Fragment>\r\n              <QuestForm\r\n              parent = {this}\r\n              ></QuestForm>\r\n              <QuestDataGrid\r\n              parent = {this}\r\n              rows = {this.state.items}\r\n              ></QuestDataGrid>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\nexport default QuestsAPI\r\n","C:\\web\\quest_list\\quest_list\\src\\Components\\QuestForm.js",["31"],"C:\\web\\quest_list\\quest_list\\src\\Components\\QuestDataGrid.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":43,"column":32,"nodeType":"38","messageId":"39","endLine":43,"endColumn":37},{"ruleId":"36","severity":1,"message":"40","line":3,"column":8,"nodeType":"38","messageId":"39","endLine":3,"endColumn":17},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'items' is assigned a value but never used.","Identifier","unusedVar","'TextField' is defined but never used.","no-global-assign","no-unsafe-negation"]